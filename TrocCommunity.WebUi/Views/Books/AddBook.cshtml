@model TrocCommunity.Core.ViewModels.LivreCategorieViewModel
<link rel="stylesheet" href=@Url.Content("/Content/css/bookAdd.css")>

@{
    ViewBag.Title = "AddBook";
}

<h2>Ajouter un livre</h2>

@using (Ajax.BeginForm("AddPartialBook", "Books", new AjaxOptions { UpdateTargetId = "resultDiv", InsertionMode = InsertionMode.Replace }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Livre</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*    <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*
            <div class="form-group">
                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Editor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Editor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Editor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateEdition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateEdition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateEdition, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Livre.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Livre.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Livre.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>
        @*
            <div class="form-group">
                @Html.LabelFor(model => model.Volume, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Volume, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Volume, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Disponible, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Disponible)
                        @Html.ValidationMessageFor(model => model.Disponible, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PointDuLivre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PointDuLivre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PointDuLivre, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*        <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Ajouter" class="btn btn-default" onclick="myFunctionBook()" />
                </div>
            </div>*@

        @*        <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Ajouter" class="btn btn-default" onclick="myFunctionBook()" />
                </div>
            </div>*@

        <div class="form-group">
            <div class=" col-md-10">
                <input type="submit" value="Ajouter" class="btn btn-default"/>
            </div>
        </div>


        @*    <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Ajouter" class="btn btn-default" id="livreId"/>
                </div>
            </div>*@

    </div>





    <div class="card text-dark border-info mb-3" style="max-width: 18rem; display:none">

        @if (ViewBag.FirstStep == true)
        {
            <div class="form-group">
                <div class="col-md-10 m-0">
                    <input type="submit" value="AjouterLivre" class="btn btn-default" />
                </div>
            </div>
        }

    </div>

}

<div id="resultDiv">

</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*<script>
        function myFunctionBook() {
            var x = document.getElementById("myDIV");
            if (x.style.display === "none") {
                x.style.display = "block";
            } else {
                x.style.display = "none";
            }
        }
    </script>*@


@section scripts {
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")

    <script>
        function updatePoint() {
            var selectedEtat = document.getElementById("etatId").value;
            var price = document.getElementById("priceId").innerHTML;
            document.getElementById("nbPointId").innerHTML = CalculPoints(price, selectedEtat);
            document.getElementById("total_value").innerHTML = CalculPoints(price, selectedEtat);
            document.getElementById("avance_point").innerHTML = CalculAvancePoints(price, selectedEtat);
        }

        function CalculPoints(price, etatDuLivre) {
            var nbrePoints = 0.0;
            nbrePoints = price * etatDuLivre * 0.01;
            return (Math.round(nbrePoints * 10)) / 10 + " points";
        }

        function CalculAvancePoints(price, etatDuLivre) {
            var nbrePoints = 0.0;
            nbrePoints = price * etatDuLivre * 0.01 * 0.25;
            return (Math.round(nbrePoints * 10)) / 10 + " points";
        }

    </script>
}


