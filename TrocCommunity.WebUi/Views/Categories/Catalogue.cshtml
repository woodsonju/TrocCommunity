@model TrocCommunity.Core.Tools.CategorieLivre

@{
    ViewBag.Title = "Catalogue";
}
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">


<div class="product-search">

    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Recherche</a>
            <a class="nav-item nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Recherche avancée</a>
            @*<a class="nav-item nav-link" id="nav-contact-tab" data-toggle="tab" href="#nav-contact" role="tab" aria-controls="nav-contact" aria-selected="false">Contact</a>*@
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            @using (Html.BeginForm("Search", "Categories", FormMethod.Get))
            {

                <input id="search" name="search" type="text" value="@ViewBag.Search" placeholder="Rechercher..." />

                <input type="submit" value="Valider" />
            }
        </div>
        <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">

            @using (Html.BeginForm("AdvancedSearch", "Categories", FormMethod.Get, new { amount1 = "#amount1", amount2 = "#amount2" }))
            {

                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-3">
                            @*<div class="col-sm-6">
                <label>Auteur:  </label> <input type="text" name="Auteur">
            </div>*@
                            <p class=" justify-content-center text-center">
                                <a class="btn btn-primary d-block" data-toggle="collapse" href="#collapseTitre" role="button" aria-expanded="false" aria-controls="collapseExample">
                                    Auteur
                                </a>
                            </p>
                            <div class="collapse" id="collapseTitre">
                                <div class="card card-body mr-2">
                                    <input type="text" name="Auteur">
                                </div>
                            </div>
                        </div>

                        @*<div class="col-sm-6">
            <label>Titre:  </label> <input type="text" name="Titre">
        </div>*@
                        <div class="col-md-3">
                            <p class=" justify-content-center text-center">
                                <a class="btn btn-primary d-block" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
                                    Titre
                                </a>
                            </p>
                            <div class="collapse mr-2" id="collapseExample">
                                <div class="card card-body">
                                    <input type="text" name="Titre">
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <p class=" justify-content-center text-center">
                                <a class="btn btn-primary d-block" data-toggle="collapse" href="#collapsePoints" role="button" aria-expanded="false" aria-controls="collapseExample">
                                    Nombre de points
                                </a>
                            </p>
                            <div class="collapse" id="collapsePoints">
                                <div class="card card-body mr-2">
                                    <div class="row">

                                        <label for="amount1">Min  </label>
                                        <input type="text" name="amount1" id="amount1"  style="border:0; color:#f6931f; font-weight:bold;">
                                        <label for="amount2">Max  </label>
                                        <input type="text" name="amount2" id="amount2"  style="border:0; color:#f6931f; font-weight:bold;">


                                    </div>

                                    <div id="slider-rangeTest"></div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <p class=" justify-content-center text-center">
                                <a class="btn btn-primary d-block" data-toggle="collapse" href="#collapseGeolocalisation" role="button" aria-expanded="false" aria-controls="collapseExample">
                                    Géolocalisation
                                </a>
                            </p>
                            <div class="collapse" id="collapseGeolocalisation">
                                <div class="card card-body">
                                    @if (Session["connexion"] != null)
                                    {
                                        <b>Géolocalisation</b>
                                        <div>

                                            @Html.CheckBox("Ville", false, new { id = "Ville" })
                                            <label for="Ville">Echange dans la même ville</label>
                                        </div>
                                        <div>

                                            @Html.CheckBox("Rayon", false, new { id = "Rayon", onclick = "appear()" })
                                            <label for="range">Echange autour de chez moi</label>

                                            <input type="text" name="range" id="range"  style="display:none; border:0; color:#f6931f; font-weight:bold;" />
                                            <div id="slider-GeoLoc"  style="display:none"></div>

                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                        </div>
                        <br>
                        <br>

                        @*<div class="row">
        <div class="col-sm-6">
            <b class=" = " row">Nombre de points</b>

            <div class="row">

                <label for="amount1" class="col-sm-2 ">Min  </label>
                <input type="text" name="amount1" id="amount1" class="col-sm-2 " style="border:0; color:#f6931f; font-weight:bold;">
                <label for="amount2" class="col-sm-2 ">Max  </label>
                <input type="text" name="amount2" id="amount2" class="col-sm-2 " style="border:0; color:#f6931f; font-weight:bold;">


            </div>

            <div class="row; col-sm-6" id="slider-rangeTest" style="display:flex"></div>
        </div>*@

                        <div class="col-sm-6">
                            <b class="row">Etat du Livre Accepté (Obligatoire)</b>
                            <br />

                            <div class="">

                                @Html.CheckBox("cn", false, new { id = "cn" })
                                <label for="cn">Comme neuf</label>
                            </div>

                            <div class="">

                                @Html.CheckBox("be", false, new { id = "be" })
                                <label for="be">Bon état</label>
                            </div>
                            <div class="">

                                @Html.CheckBox("em", false, new { id = "em" })
                                <label for="em">état moyen</label>
                            </div>
                            <div class="">

                                @Html.CheckBox("u", false, new { id = "u" })
                                <label for="u">Usé</label>
                            </div>

                        </div>


                    </div>
                @*</div>*@

                <div class="col-md-12 col-sm-12">


                </div>


                <br>
                //<label for="amount1" class="col-md-1 col-sm-12">Points : </label>

                <br>



                <br>



                @*if (Session["connexion"] != null)
                {
                    <b>Géolocalisation</b>
                    <div>

                        @Html.CheckBox("Ville", false, new { id = "Ville" })
                        <label for="Ville">Echange dans la même ville</label>
                    </div>
                    <div>

                        @Html.CheckBox("Rayon", false, new { id = "Rayon", onclick = "appear()" })
                        <label for="Rayon">Echange autour de chez moi</label>

                        <input type="text" name="range" id="range" class="col-md-1 col-sm-12" style="display:none; border:0; color:#f6931f; font-weight:bold;">
                        <div id="slider-GeoLoc" class="col-md-4 col-sm-12" style="display:none"></div>

                    </div>
                }*@



                <input type="submit" value="Recherche Avancée" />
            }
        </div>
        @*<div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">...</div>*@
    </div>


    @*@using (Html.BeginForm("Search", "Categories", FormMethod.Get))
    {

        <input id="search" name="search" type="text" value="@ViewBag.Search" placeholder="Rechercher..." />

        <input type="submit" value="Valider" />
    }*@



    @*<p>Recherche Avancée</p>
    @using (Html.BeginForm("AdvancedSearch", "Categories", FormMethod.Get, new { amount1 = "#amount1", amount2 = "#amount2" }))
    {

        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-6">
                    <label>Auteur:  </label> <input type="text" name="Auteur">
                </div>

                <div class="col-sm-6">
                    <label>Titre:  </label> <input type="text" name="Titre">
                </div>
            </div>
            <br>
            <br>

            <div class="row">
                <div class="col-sm-6">
                    <b class=" = " row">Nombre de points</b>

                    <div class="row">

                        <label for="amount1" class="col-sm-2 ">Min  </label>
                        <input type="text" name="amount1" id="amount1" class="col-sm-2 " style="border:0; color:#f6931f; font-weight:bold;">
                        <label for="amount2" class="col-sm-2 ">Max  </label>
                        <input type="text" name="amount2" id="amount2" class="col-sm-2 " style="border:0; color:#f6931f; font-weight:bold;">


                    </div>

                    <div class="row; col-sm-6" id="slider-rangeTest" style="display:flex"></div>
                </div>

                <div class="col-sm-6">
                    <b class="row">Etat du Livre Accepté</b>
                    <br />

                    <div class="">

                        @Html.CheckBox("cn", false, new { id = "cn" })
                        <label for="cn">Comme neuf</label>
                    </div>

                    <div class="">

                        @Html.CheckBox("be", false, new { id = "be" })
                        <label for="be">Bon état</label>
                    </div>
                    <div class="">

                        @Html.CheckBox("em", false, new { id = "em" })
                        <label for="em">état moyen</label>
                    </div>
                    <div class="">

                        @Html.CheckBox("u", false, new { id = "u" })
                        <label for="u">Usé</label>
                    </div>

                </div>


            </div>
        </div>

        <div class="col-md-12 col-sm-12">


        </div>


        <br>
        //<label for="amount1" class="col-md-1 col-sm-12">Points : </label>

        <br>



        <br>



        if (Session["connexion"] != null )
        {
            <b>Géolocalisation</b>
            <div>

                @Html.CheckBox("Ville", false, new { id = "Ville" })
                <label for="Ville">Echange dans la même ville</label>
            </div>
            <div>

                @Html.CheckBox("Rayon", false, new { id = "Rayon", onclick = "appear()" })
                <label for="Rayon">Echange autour de chez moi</label>

                <input type="text" name="range" id="range" class="col-md-1 col-sm-12" style="display:none; border:0; color:#f6931f; font-weight:bold;">
                <div id="slider-GeoLoc" class="col-md-4 col-sm-12" style="display:none"></div>

            </div>
        }



        <input type="submit" value="Recherche Avancée" />
    }*@


</div>
            @helper buildLinks(int start, int end, string innerContent)
            {
                for (int i = start; i <= end; i++)
                {

                    if (ViewBag.typeSearch == "Catalogue")
                    {
                        <a class="@(i == ViewBag.CurrentPage ? "current" : "")"
                           href="@Url.Action("Catalogue", "Categories", new { page = i })">@(innerContent ?? i.ToString())</a>
                    }

                    else if (ViewBag.typeSearch == "AdvancedSearch")
                    {
                        <a class="@(i == ViewBag.CurrentPage ? "current" : "")"
                           href="@Url.Action("AdvancedSearch", "Categories", new { amount1 = ViewBag.amount1, amount2 = ViewBag.amount2 , Auteur= ViewBag.Auteur , Titre=ViewBag.Titre  , cn=ViewBag.cn  , be=ViewBag.be, em=ViewBag.em , u =ViewBag.u, ville=ViewBag.ville,rayon= ViewBag.rayon  ,range=ViewBag.range  , page = i })">@(innerContent ?? i.ToString())</a>
                    }
                    else
                    {
                        <a class="@(i == ViewBag.CurrentPage ? "current" : "")"
                           href="@Url.Action("Search", "Categories", new { page = i,search = ViewBag.search })">@(innerContent ?? i.ToString())</a>
                    }
                }

            }

            @helper pageLinks()
            {
                const int maxPages = 11;


                if (ViewBag.TotalPages <= maxPages)
                {
                    if (ViewBag.NbLivreSearch == null && ViewBag.Search != null)
                    {
                        @buildLinks(1, (int)ViewBag.NoSearch, null)

                        return;
                    }

                    if (ViewBag.NbLivreSearch <= 9)
                    {
                        @buildLinks(1, (int)ViewBag.TotalPages, null)

                        return;
                    }
                    else
                    {
                        @buildLinks(1, (int)ViewBag.TotalPages, null)

                        return;
                    }



                }

                int pagesAfter = ViewBag.TotalPages - ViewBag.CurrentPage; // Number of pages after current
                int pagesBefore = ViewBag.CurrentPage - 1; // Number of pages before current

                if (pagesAfter <= 4)
                {
                    @buildLinks(1, 1, null) // Show 1st page

                    int pageSubset = ViewBag.TotalPages - maxPages - 1 > 1 ? ViewBag.TotalPages - maxPages - 1 : 2;
                    @buildLinks(pageSubset, pageSubset, "...") // Show page subset (...)

                    @buildLinks(ViewBag.TotalPages - maxPages + 3, ViewBag.TotalPages, null) // Show last pages

                    return; // Exit
                }

                if (pagesBefore <= 4)
                {
                    @buildLinks(1, maxPages - 2, null) // Show 1st pages


                    int pageSubset = maxPages + 2 < ViewBag.TotalPages ? maxPages + 2 : ViewBag.TotalPages - 1;
                    @buildLinks(pageSubset, pageSubset, "...") // Show page subset (...)

                    @buildLinks(ViewBag.TotalPages, ViewBag.TotalPages, null) // Show last page

                    return; // Exit

                }

                if (pagesAfter > 4)
                {
                    @buildLinks(1, 1, null) // Show 1st pages

                    int pageSubset1 = ViewBag.CurrentPage - 7 > 1 ? ViewBag.CurrentPage - 7 : 2;
                    int pageSubset2 = ViewBag.CurrentPage + 7 < ViewBag.TotalPages ? ViewBag.CurrentPage + 7 : ViewBag.TotalPages - 1;

                    @buildLinks(pageSubset1, pageSubset1, pageSubset1 == ViewBag.CurrentPage - 4 ? null : "...") // Show 1st page subset (...)

                    @buildLinks(ViewBag.CurrentPage - 3, ViewBag.CurrentPage + 3, null) // Show middle pages

                    // Show 2nd page subset (...)
                    // only show ... if page is contigous to the previous one.
                    @buildLinks(pageSubset2, pageSubset2, pageSubset2 == ViewBag.CurrentPage + 4 ? null : "...")
                    @buildLinks(ViewBag.TotalPages, ViewBag.TotalPages, null)// Show last page

                    return; // Exit

                }
            }



            <div class="container-fluid" id="container-categorie-livre">
                <div class="row" id="categorie-livre-row">

                    <div class="col-md-4" style="padding : 0!important">

                        <div class="bs-example">
                            <div class="accordion" id="accordionExample">

                    <div class="card">
                        @foreach (var item in Model.Categories)
                        {
                            <div class="card-header" id="@item.Description.Substring(0, 3)">
                                <h2 class="mb-0 category-btn">
                                    <button type="button" class="btn btn-link ">
                                        @Html.ActionLink(item.NomCategorie, "Catalogue", new { cat = item.NomCategorie.Substring(0, 3), category = item.NomCategorie.Replace(" ", "-").Replace(",", "-") })
                                    </button>
                                    <i class="fas fa-sort-down  collapsed ml-lg-2" data-toggle="collapse" data-target="#@item.NomCategorie.Substring(0, 3)"></i>
                                </h2>
                            </div>
                            <div id="@item.NomCategorie.Substring(0, 3)" class="collapse " aria-labelledby="@item.Description.Substring(0, 3)" data-parent="#accordionExample">
                                <div class="card-body">
                                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                                </div>
                            </div>
                        }
                    </div>

                            </div>
                        </div>
                    </div>





                    <div class="col-md-8">

                        <div class="row" id="row-section-book-card">
                            @if (ViewBag.NbLivreSearch == 0 && ViewBag.Search != null || ViewBag.TotalPages == 0)
                            {
                                <p>Il n'y a pas de livres correspondant à cette recherche.</p>
                            }
                            @foreach (var item in Model.Livres)
                            {                            

                                <div class="col-lg-4 col-md-6  col-sm-12 section-book-card">
                                    <div class="section-picture-book-image thumbnail">
                                        <a class="text-center" href='@Url.Action("DetailsLivre", "Categories")/@item.Id'>
                                            <img src="@Url.Content(item.Image)" alt="Livre" class="img-fluid image-livre-catalogue" />
                                        </a>
                                    </div>
                                    <div>
                                        <p class="text-center titre-books-thumbnail">@Html.DisplayFor(modelItem => item.Title)</p>
                                        <p class="text-center">@Html.DisplayFor(modelItem => item.Author)</p>
                                        <div class="books-items">
                                            <p class="books-points text-center" style = "color : #fff">@Html.DisplayFor(modelItem => item.PointDuLivre) points</p>
                                        </div>
                                        <p class="text-center">@Html.DisplayFor(modelItem => item.Client.Adresse.Ville)</p>
                                    </div>
                                </div>

                            }
                        </div>


                    </div>


                </div>
                <div class="row" id="row-pagination">
                    <div class="pagination">
                        @pageLinks()
                    </div>
                </div>
            </div>

            <script>
                $("#slider-rangeTest").slider({
                    range: true,
                    min: 0,
                    max: 100,
                    values: [0, 100],
                    slide: function (event, ui) {
                        $("#amount1").val(ui.values[0]);
                        $("#amount2").val(ui.values[1]);

                    }
                });

                $("#amount1").val($("#slider-rangeTest").slider("values", 0));
                $("#amount2").val($("#slider-rangeTest").slider("values", 1));

                function appear() {

                    var checkBox = document.getElementById("Rayon");
                    var divSlider = document.getElementById("slider-GeoLoc");
                    var rangeText = document.getElementById("range");

                    if (checkBox.checked) {
                        divSlider.style.display = "block";
                        rangeText.style.display = "block";
                    }
                    else {
                        divSlider.style.display = "none";
                        rangeText.style.display = "none";
                    }
                }

                $("#slider-GeoLoc").slider({
                    range: false,
                    min: 0,
                    max: 100,
                    values: [0],
                    slide: function (event, ui) {
                        $("#range").val(ui.values[0]);

                    }
                });

                $("#range").val($("#slider-rangeTest").slider("values", 0));


            </script>
